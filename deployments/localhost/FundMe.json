{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "fundingAddress",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0x75051bd9d9f0907fb7f69f39356e4fd67a078c11d2d8ee342d134d8a9c184650",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1015881",
    "logsBloom": "0x
    "blockHash": "0x0abbd3b503fd586d9be4cf809246d0b10f8478eaf9dbbc6f569b56aac82ee2d9",
    "transactionHash": "0x75051bd9d9f0907fb7f69f39356e4fd67a078c11d2d8ee342d134d8a9c184650",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1015881",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "c443bf636e1f43e32d64f3d4df5df02a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundingAddress\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Enes Erta\\u015f\",\"details\":\"This implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{\"fund()\":{\"details\":\"This implements price feeds for our library\"}},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"constructor receive fallback external public internal private view / pure\"},\"fund()\":{\"notice\":\"This function funds this contract\"}},\"notice\":\"This contract is to demo a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\n//Pragma\\npragma solidity ^0.8.0;\\n//Imports\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n//Error Codes\\nerror FundMe__NotOwner();\\n\\n//Interfaces, Libraries, Contracts\\n\\n/**@title A contract for crowd funding\\n * @author Enes Erta\\u015f\\n * @notice This contract is to demo a sample funding contract\\n * @dev This implements price feeds as our library\\n */\\ncontract FundMe {\\n    //Type Declarations\\n    using PriceConverter for uint256;\\n\\n    //State Variables!\\n    address[] private s_funders;\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address private immutable i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    modifier onlyOwner() {\\n        //require(msg.sender == i_owner, \\\"Sender is not owner!\\\");\\n        if (msg.sender != i_owner) {\\n            revert FundMe__NotOwner();\\n        }\\n        _;\\n    }\\n\\n    //Functions Order:\\n    /// constructor\\n    /// receive\\n    /// fallback\\n    ///external\\n    ///public\\n    ///internal\\n    ///private\\n    ///view / pure\\n\\n    constructor(address priceFeed) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeed);\\n    }\\n\\n    /**\\n     * @notice This function funds this contract\\n     * @dev This implements price feeds for our library\\n     */\\n    function fund() public payable {\\n        //Want to be able to set a minimum fund amount in USD\\n        //1. How do we send ETH to this contract?\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"You need to spend more ETH!\\\"\\n        ); //1e18 = 1 * 10 ** 18\\n        s_funders.push(msg.sender);\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n    }\\n\\n    function withdraw() public payable onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        // reset the array\\n        s_funders = new address[](0);\\n        //withdraw funds\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success, \\\"Call failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner {\\n        address[] memory funders = s_funders;\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n\\n    function getAddressToAmountFunded(\\n        address fundingAddress\\n    ) public view returns (uint256) {\\n        return s_addressToAmountFunded[fundingAddress];\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n}\\n\",\"keccak256\":\"0xf14e98812223c60427c86b6acec0ae81903e9d6051d45c8fe62c0b23248a1f8b\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    // 1000000000\\n    // call it get fiatConversionRate, since it assumes something about decimals\\n    // It wouldn't work for every aggregator\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // the actual ETH/USD conversation rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xeeacca248fbda7cef395e4ab393f5240714990fe60f56ab0a91e55b729cf1a65\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200128738038062001287833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c61110162000186600039600081816101ae0152818161034101528181610580015261077601526111016000f3fe6080604052600436106100705760003560e01c80639e87a5cd1161004e5780639e87a5cd146100e7578063b60d428814610112578063be2693f01461011c578063d7b4750c1461012657610070565b80630343fb25146100755780633ccfd60b146100b25780636b69a592146100bc575b600080fd5b34801561008157600080fd5b5061009c60048036038101906100979190610a39565b610163565b6040516100a99190610a7f565b60405180910390f35b6100ba6101ac565b005b3480156100c857600080fd5b506100d161040c565b6040516100de9190610a7f565b60405180910390f35b3480156100f357600080fd5b506100fc610419565b6040516101099190610af9565b60405180910390f35b61011a610443565b005b61012461057e565b005b34801561013257600080fd5b5061014d60048036038101906101489190610b40565b61080c565b60405161015a9190610b7c565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610231576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156102dc57600080828154811061025657610255610b97565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806102d490610bf5565b915050610234565b50600067ffffffffffffffff8111156102f8576102f7610c3e565b5b6040519080825280602002602001820160405280156103265781602001602082028036833780820191505090505b506000908051906020019061033c92919061092f565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161038390610c9e565b60006040518083038185875af1925050503d80600081146103c0576040519150601f19603f3d011682016040523d82523d6000602084013e6103c5565b606091505b5050905080610409576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040090610d10565b60405180910390fd5b50565b6802b5e3af16b188000081565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b1880000610482600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461085390919063ffffffff16565b10156104c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ba90610d7c565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105759190610d9c565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610603576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008080548060200260200160405190810160405280929190818152602001828054801561068657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161063c575b5050505050905060005b81518110156107115760008282815181106106ae576106ad610b97565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061070990610bf5565b915050610690565b50600067ffffffffffffffff81111561072d5761072c610c3e565b5b60405190808252806020026020018201604052801561075b5781602001602082028036833780820191505090505b506000908051906020019061077192919061092f565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516107b890610c9e565b60006040518083038185875af1925050503d80600081146107f5576040519150601f19603f3d011682016040523d82523d6000602084013e6107fa565b606091505b505090508061080857600080fd5b5050565b600080828154811061082157610820610b97565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061085f8361088f565b90506000670de0b6b3a764000085836108789190610df2565b6108829190610e7b565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156108d857600080fd5b505afa1580156108ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109109190610f39565b5050509150506402540be400816109279190610fb4565b915050919050565b8280548282559060005260206000209081019282156109a8579160200282015b828111156109a75782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061094f565b5b5090506109b591906109b9565b5090565b5b808211156109d25760008160009055506001016109ba565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a06826109db565b9050919050565b610a16816109fb565b8114610a2157600080fd5b50565b600081359050610a3381610a0d565b92915050565b600060208284031215610a4f57610a4e6109d6565b5b6000610a5d84828501610a24565b91505092915050565b6000819050919050565b610a7981610a66565b82525050565b6000602082019050610a946000830184610a70565b92915050565b6000819050919050565b6000610abf610aba610ab5846109db565b610a9a565b6109db565b9050919050565b6000610ad182610aa4565b9050919050565b6000610ae382610ac6565b9050919050565b610af381610ad8565b82525050565b6000602082019050610b0e6000830184610aea565b92915050565b610b1d81610a66565b8114610b2857600080fd5b50565b600081359050610b3a81610b14565b92915050565b600060208284031215610b5657610b556109d6565b5b6000610b6484828501610b2b565b91505092915050565b610b76816109fb565b82525050565b6000602082019050610b916000830184610b6d565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c0082610a66565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c3357610c32610bc6565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610c88600083610c6d565b9150610c9382610c78565b600082019050919050565b6000610ca982610c7b565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610cfa600b83610cb3565b9150610d0582610cc4565b602082019050919050565b60006020820190508181036000830152610d2981610ced565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610d66601b83610cb3565b9150610d7182610d30565b602082019050919050565b60006020820190508181036000830152610d9581610d59565b9050919050565b6000610da782610a66565b9150610db283610a66565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610de757610de6610bc6565b5b828201905092915050565b6000610dfd82610a66565b9150610e0883610a66565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e4157610e40610bc6565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e8682610a66565b9150610e9183610a66565b925082610ea157610ea0610e4c565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610ecb81610eac565b8114610ed657600080fd5b50565b600081519050610ee881610ec2565b92915050565b6000819050919050565b610f0181610eee565b8114610f0c57600080fd5b50565b600081519050610f1e81610ef8565b92915050565b600081519050610f3381610b14565b92915050565b600080600080600060a08688031215610f5557610f546109d6565b5b6000610f6388828901610ed9565b9550506020610f7488828901610f0f565b9450506040610f8588828901610f24565b9350506060610f9688828901610f24565b9250506080610fa788828901610ed9565b9150509295509295909350565b6000610fbf82610eee565b9150610fca83610eee565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561100957611008610bc6565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561104657611045610bc6565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561108357611082610bc6565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156110c0576110bf610bc6565b5b82820290509291505056fea2646970667358221220dc7efa44da438f2a48136e1e0e56fce045e507adb61352fb0e7b14d32e2b8f7764736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100705760003560e01c80639e87a5cd1161004e5780639e87a5cd146100e7578063b60d428814610112578063be2693f01461011c578063d7b4750c1461012657610070565b80630343fb25146100755780633ccfd60b146100b25780636b69a592146100bc575b600080fd5b34801561008157600080fd5b5061009c60048036038101906100979190610a39565b610163565b6040516100a99190610a7f565b60405180910390f35b6100ba6101ac565b005b3480156100c857600080fd5b506100d161040c565b6040516100de9190610a7f565b60405180910390f35b3480156100f357600080fd5b506100fc610419565b6040516101099190610af9565b60405180910390f35b61011a610443565b005b61012461057e565b005b34801561013257600080fd5b5061014d60048036038101906101489190610b40565b61080c565b60405161015a9190610b7c565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610231576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156102dc57600080828154811061025657610255610b97565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806102d490610bf5565b915050610234565b50600067ffffffffffffffff8111156102f8576102f7610c3e565b5b6040519080825280602002602001820160405280156103265781602001602082028036833780820191505090505b506000908051906020019061033c92919061092f565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161038390610c9e565b60006040518083038185875af1925050503d80600081146103c0576040519150601f19603f3d011682016040523d82523d6000602084013e6103c5565b606091505b5050905080610409576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040090610d10565b60405180910390fd5b50565b6802b5e3af16b188000081565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b1880000610482600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461085390919063ffffffff16565b10156104c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ba90610d7c565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105759190610d9c565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610603576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008080548060200260200160405190810160405280929190818152602001828054801561068657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161063c575b5050505050905060005b81518110156107115760008282815181106106ae576106ad610b97565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061070990610bf5565b915050610690565b50600067ffffffffffffffff81111561072d5761072c610c3e565b5b60405190808252806020026020018201604052801561075b5781602001602082028036833780820191505090505b506000908051906020019061077192919061092f565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516107b890610c9e565b60006040518083038185875af1925050503d80600081146107f5576040519150601f19603f3d011682016040523d82523d6000602084013e6107fa565b606091505b505090508061080857600080fd5b5050565b600080828154811061082157610820610b97565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061085f8361088f565b90506000670de0b6b3a764000085836108789190610df2565b6108829190610e7b565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156108d857600080fd5b505afa1580156108ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109109190610f39565b5050509150506402540be400816109279190610fb4565b915050919050565b8280548282559060005260206000209081019282156109a8579160200282015b828111156109a75782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061094f565b5b5090506109b591906109b9565b5090565b5b808211156109d25760008160009055506001016109ba565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a06826109db565b9050919050565b610a16816109fb565b8114610a2157600080fd5b50565b600081359050610a3381610a0d565b92915050565b600060208284031215610a4f57610a4e6109d6565b5b6000610a5d84828501610a24565b91505092915050565b6000819050919050565b610a7981610a66565b82525050565b6000602082019050610a946000830184610a70565b92915050565b6000819050919050565b6000610abf610aba610ab5846109db565b610a9a565b6109db565b9050919050565b6000610ad182610aa4565b9050919050565b6000610ae382610ac6565b9050919050565b610af381610ad8565b82525050565b6000602082019050610b0e6000830184610aea565b92915050565b610b1d81610a66565b8114610b2857600080fd5b50565b600081359050610b3a81610b14565b92915050565b600060208284031215610b5657610b556109d6565b5b6000610b6484828501610b2b565b91505092915050565b610b76816109fb565b82525050565b6000602082019050610b916000830184610b6d565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c0082610a66565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c3357610c32610bc6565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610c88600083610c6d565b9150610c9382610c78565b600082019050919050565b6000610ca982610c7b565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610cfa600b83610cb3565b9150610d0582610cc4565b602082019050919050565b60006020820190508181036000830152610d2981610ced565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610d66601b83610cb3565b9150610d7182610d30565b602082019050919050565b60006020820190508181036000830152610d9581610d59565b9050919050565b6000610da782610a66565b9150610db283610a66565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610de757610de6610bc6565b5b828201905092915050565b6000610dfd82610a66565b9150610e0883610a66565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e4157610e40610bc6565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e8682610a66565b9150610e9183610a66565b925082610ea157610ea0610e4c565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610ecb81610eac565b8114610ed657600080fd5b50565b600081519050610ee881610ec2565b92915050565b6000819050919050565b610f0181610eee565b8114610f0c57600080fd5b50565b600081519050610f1e81610ef8565b92915050565b600081519050610f3381610b14565b92915050565b600080600080600060a08688031215610f5557610f546109d6565b5b6000610f6388828901610ed9565b9550506020610f7488828901610f0f565b9450506040610f8588828901610f24565b9350506060610f9688828901610f24565b9250506080610fa788828901610ed9565b9150509295509295909350565b6000610fbf82610eee565b9150610fca83610eee565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561100957611008610bc6565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561104657611045610bc6565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561108357611082610bc6565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156110c0576110bf610bc6565b5b82820290509291505056fea2646970667358221220dc7efa44da438f2a48136e1e0e56fce045e507adb61352fb0e7b14d32e2b8f7764736f6c63430008080033",
  "devdoc": {
    "author": "Enes Ertaş",
    "details": "This implements price feeds as our library",
    "kind": "dev",
    "methods": {
      "fund()": {
        "details": "This implements price feeds for our library"
      }
    },
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "constructor receive fallback external public internal private view / pure"
      },
      "fund()": {
        "notice": "This function funds this contract"
      }
    },
    "notice": "This contract is to demo a sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 74,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}